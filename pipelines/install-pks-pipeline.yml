ops_dir_config_params: &ops-dir-config-params
  OPSMAN_DOMAIN_OR_IP_ADDRESS: ((opsman_domain_or_ip_address))
  OPSMAN_USERNAME: ((opsman_admin_username))
  OPSMAN_PASSWORD: ((opsman_admin_password))
  VCENTER_HOST: ((vcenter_host))
  VCENTER_USR: ((vcenter_usr))
  VCENTER_PWD: ((vcenter_pwd))
  VCENTER_DATA_CENTER: ((vcenter_data_center))
  VCENTER_DISK_TYPE: ((vm_disk_type))
  EPHEMERAL_STORAGE_NAMES: ((ephemeral_storage_names))
  PERSISTENT_STORAGE_NAMES: ((persistent_storage_names))
  BOSH_VM_FOLDER:  ((bosh_vm_folder))
  BOSH_TEMPLATE_FOLDER: ((bosh_template_folder))
  BOSH_DISK_PATH: ((bosh_disk_path))
  ICMP_CHECKS_ENABLED: ((icmp_checks_enabled))
  INFRA_NETWORK_NAME: ((infra_network_name))
  INFRA_VCENTER_NETWORK: ((infra_vsphere_network))
  INFRA_NW_CIDR: ((infra_nw_cidr))
  INFRA_EXCLUDED_RANGE: ((infra_excluded_range))
  INFRA_NW_DNS: ((infra_nw_dns))
  INFRA_NW_GATEWAY: ((infra_nw_gateway))
  INFRA_NW_AZS: ((infra_nw_azs))
  PKS_NETWORK_NAME: ((pks_network_name))
  PKS_VCENTER_NETWORK: ((pks_vsphere_network))
  PKS_NW_CIDR: ((pks_nw_cidr))
  PKS_EXCLUDED_RANGE: ((pks_excluded_range))
  PKS_NW_DNS: ((pks_nw_dns))
  PKS_NW_GATEWAY: ((pks_nw_gateway))
  PKS_NW_AZS: ((pks_nw_azs))
  AZ_1: ((az_1_name))
  AZ_1_CLUSTER_NAME: ((az_1_cluster_name))
  AZ_1_RP_NAME: ((az_1_rp_name))
  NTP_SERVERS: ((ntp_servers))
  ENABLE_VM_RESURRECTOR: ((enable_vm_resurrector))
  MAX_THREADS: ((max_threads))
  TRUSTED_CERTIFICATES: ((trusted_certificates))
  NSX_NETWORKING_ENABLED: ((nsx_networking_enabled))

pks_config_params: &pks-config-params
  IAAS: vsphere
  OPSMAN_DOMAIN_OR_IP_ADDRESS: ((opsman_domain_or_ip_address))
  OPSMAN_USERNAME: ((opsman_admin_username))
  OPSMAN_PASSWORD: ((opsman_admin_password))
  PKS_SINGLETON_JOB_AZ: ((pks_tile_singleton_job_az))
  PKS_NW_AZS: ((pks_tile_nw_azs))
  PKS_DEPLOYMENT_NETWORK_NAME: ((pks_tile_deployment_network_name))
  PKS_CLUSTER_SERVICE_NETWORK_NAME: ((pks_tile_cluster_service_network_name))
  PKS_SSL_CERT: ((pks_tile_cert_pem))
  PKS_SSL_PRIVATE_KEY: ((pks_tile_private_key_pem))
  PKS_SYSTEM_DOMAIN: ((pks_tile_system_domain))
  PKS_UAA_DOMAIN_PREFIX: ((pks_tile_uaa_domain_prefix))
  NSX_API_MANAGER: ((nsx_address))
  NSX_API_USER: ((nsx_username))
  NSX_API_PASSWORD: ((nsx_password))
  NSX_API_CA_CERT: ((nsx_ca_certificate))
  NSX_SKIP_SSL_VERIFICATION: ((pks_tile_nsx_skip_ssl_verification))
  PKS_VCENTER_HOST: ((pks_tile_vcenter_host))
  PKS_VCENTER_USR: ((pks_tile_vcenter_usr))
  PKS_VCENTER_PWD: ((pks_tile_vcenter_pwd))
  PKS_VCENTER_DATA_CENTER: ((pks_tile_vcenter_data_center))
  PKS_VCENTER_DATASTORE: ((pks_tile_vcenter_datastore))
  PKS_VCENTER_CLUSTER: ((pks_tile_vcenter_cluster))
  PKS_VM_FOLDER: ((pks_tile_vm_folder))
  PKS_CLI_USER: ((pks_tile_cli_username))
  PKS_CLI_PASSWORD: ((pks_tile_cli_password))
  PKS_CLI_EMAIL: ((pks_tile_cli_useremail))
  PKS_PLAN_DETAILS: ((pks_tile_plan_details))
  PKS_T0_ROUTER_ID: ((pks_tile_t0_router_id))
  PKS_IP_BLOCK_ID: ((pks_tile_ip_block_id))
  PKS_FLOATING_IP_POOL_ID: ((pks_tile_floating_ip_pool_id))
  PKS_NODES_IP_BLOCK_ID: ((pks_tile_nodes_ip_block_id))
  PKS_SYSLOG_MIGRATION_ENABLED: ((pks_tile_syslog_migration_enabled))
  PKS_SYSLOG_ADDRESS: ((pks_tile_syslog_address))
  PKS_SYSLOG_PORT: ((pks_tile_syslog_port))
  PKS_SYSLOG_TRANSPORT_PROTOCOL: ((pks_tile_syslog_transport_protocol))
  PKS_SYSLOG_TLS_ENABLED: ((pks_tile_syslog_tls_enabled))
  PKS_SYSLOG_PEER: ((pks_tile_syslog_peer))
  PKS_SYSLOG_CA_CERT: ((pks_tile_syslog_ca_cert))
  PKS_ALLOW_PUBLIC_IP: ((pks_tile_allow_public_ip))
  PKS_VRLI_ENABLED: ((pks_tile_vrli_enabled))
  PKS_VRLI_HOST: ((pks_tile_vrli_host))
  PKS_VRLI_USE_SSL: ((pks_tile_vrli_use_ssl))
  PKS_VRLI_SKIP_CERT_VERIFY: ((pks_tile_vrli_skip_cert_verify))
  PKS_VRLI_CA_CERT: ((pks_tile_vrli_ca_cert))
  PKS_VRLI_RATE_LIMIT: ((pks_tile_vrli_rate_limit))
  PKS_ENABLE_HTTP_PROXY: ((pks_tile_enable_http_proxy))
  PKS_HTTP_PROXY_URL: ((pks_tile_http_proxy_url))
  PKS_HTTP_PROXY_USER: ((pks_tile_http_proxy_user))
  PKS_HTTP_PROXY_PASSWORD: ((pks_tile_http_proxy_password))
  PKS_HTTPS_PROXY_URL: ((pks_tile_https_proxy_url))
  PKS_HTTPS_PROXY_USER: ((pks_tile_https_proxy_user))
  PKS_HTTPS_PROXY_PASSWORD: ((pks_tile_https_proxy_password))
  PKS_NO_PROXY: ((pks_tile_no_proxy))
  PKS_UAA_USE_LDAP: ((pks_tile_uaa_use_ldap))
  PKS_LDAP_URL: ((pks_tile_ldap_url))
  PKS_LDAP_USER: ((pks_tile_ldap_user))
  PKS_LDAP_PASSWORD: ((pks_tile_ldap_password))
  PKS_LDAP_SEARCH_BASE: ((pks_tile_ldap_search_base))
  PKS_LDAP_GROUP_SEARCH_BASE: ((pks_tile_ldap_group_search_base))
  PKS_LDAP_SERVER_SSL_CERT: ((pks_tile_ldap_server_ssl_cert))
  PKS_LDAP_SERVER_SSL_CERT_ALIAS: ((pks_tile_ldap_server_ssl_cert_alias))
  PKS_LDAP_EMAIL_DOMAINS: ((pks_tile_ldap_email_domains))
  PKS_LDAP_FIRST_NAME_ATTRIBUTE: ((pks_tile_ldap_first_name_attribute))
  PKS_LDAP_LAST_NAME_ATTRIBUTE: ((pks_tile_ldap_last_name_attribute))
  PKS_WAVEFRONT_API_URL: ((pks_tile_wavefront_api_url))
  PKS_WAVEFRONT_TOKEN: ((pks_tile_wavefront_token))
  PKS_WAVEFRONT_ALERT_TARGETS: ((pks_tile_wavefront_alert_targets))
  PKS_TELEMETRY: ((pks_tile_telemetry))

resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

resources:
- name: pcf-pipelines
  type: git
  source:
    uri: https://github.com/pivotal-cf/pcf-pipelines.git
    branch: master

- name: nsx-t-ci-pipeline
  type: git
  source:
    uri: https://github.com/sparameswaran/nsx-t-ci-pipeline.git
    branch: master

- name: pcf-ops-manager
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: ops-manager
    product_version: ((opsman_major_minor_version))
    sort_by: semver

# Comment this off if planning to use PKS v1.1 and its not on pivnet
- name: pivotal-container-service
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: pivotal-container-service
    product_version: ((pks_major_minor_version))
    sort_by: semver

# Uncomment to use s3 bucket if PKS tile is NOT on pivnet...
# - name: pivotal-container-service
#   type: s3
#   source:
#     access_key_id: ((s3_creds_access_key_id))
#     secret_access_key: ((s3_creds_secret_access_key))
#     bucket: ((s3_bucket))
#     regexp: ((s3_pks_tile_path)) #pks/pivotal-container-service-1.1.0.pivotal
#     region_name: ((s3_region))

# Uncomment to use file server if PKS tile is NOT on pivnet......
# - name: pivotal-container-service
#   type: file-url
#   source:
#     url: ((pks_tile_webserver))/((pks_tile))
#     filename: ((pks_tile))


# Used for PKS user creation and deletion of clusters
- name: pcf-pipelines-utils
  type: git
  source:
    uri: https://github.com/pivotalservices/concourse-pipeline-samples.git

groups:

- name: full-pks-install
  jobs:
  - deploy-opsman
  - configure-director
  - deploy-director
  - upload-pks
  - deploy-pks

# From https://github.com/pivotalservices/concourse-pipeline-samples/blob/master/pipelines/pcf/pks/install-pks/pipeline.yml
- name: delete-pks-clusters
  jobs:
  - delete-clusters

- name: ops-mgr-install
  jobs:
  - deploy-opsman
  - configure-director
  - deploy-director

- name: pks-install-standalone
  jobs:
  - upload-pks-standalone
  - deploy-pks-standalone


- name: wipe
  jobs:
  - delete-clusters
  - wipe-env

jobs:

- name: deploy-opsman
  plan:
  - aggregate:
    - get: pcf-pipelines
    - get: pivnet-opsman-product
      resource: pcf-ops-manager
      params: {globs: ["*.ova"]}

  - task: deploy
    file: pcf-pipelines/install-pcf/vsphere/tasks/import-opsman/task.yml
    params:
      GOVC_INSECURE: ((vcenter_insecure))
      GOVC_CA_CERT: ((vcenter_ca_cert))
      GOVC_URL: ((vcenter_host))
      GOVC_USERNAME: ((vcenter_usr))
      GOVC_PASSWORD: ((vcenter_pwd))
      GOVC_DATACENTER: ((vcenter_data_center))
      GOVC_DATASTORE: ((om_data_store))
      GOVC_NETWORK: ((om_vm_network))
      GOVC_RESOURCE_POOL: ((om_resource_pool))
      GOVC_HOST: ((om_vm_host))
      OPSMAN_DOMAIN_OR_IP_ADDRESS: ((opsman_domain_or_ip_address))
      OPS_MGR_SSH_PWD: ((om_ssh_pwd))
      OM_NTP_SERVERS: ((om_ntp_servers))
      OM_DNS_SERVERS: ((om_dns_servers))
      OM_GATEWAY: ((om_gateway))
      OM_NETMASK: ((om_netmask))
      OM_IP: ((om_ip))
      OM_VM_NETWORK: ((om_vm_network))
      OM_VM_NAME: ((om_vm_name))
      OM_RESOURCE_POOL: ((om_resource_pool))
      OPSMAN_DISK_TYPE: ((opsman_disk_type))
      OM_VM_POWER_STATE: ((om_vm_power_state))

- name: configure-director
  plan:
  - aggregate:
    - get: pcf-pipelines
    - get: nsx-t-ci-pipeline
    - get: pcf-ops-manager
      params: {globs: []}
      passed: [deploy-opsman]
      trigger: true

  - task: config-opsman-auth
    file: pcf-pipelines/tasks/config-opsman/task.yml
    params:
      OPSMAN_DOMAIN_OR_IP_ADDRESS: ((opsman_domain_or_ip_address))
      OPSMAN_USERNAME: ((opsman_admin_username))
      OPSMAN_PASSWORD: ((opsman_admin_password))
      OPS_MGR_USR: ((opsman_admin_username))
      OPS_MGR_PWD: ((opsman_admin_password))
      OM_DECRYPTION_PWD: ((om_decryption_pwd))

  - task: configure-director
    file: nsx-t-ci-pipeline/tasks/config-opsdir-2.0/task.yml
    params: *ops-dir-config-params

- name: deploy-director
  plan:
  - aggregate:
    - get: nsx-t-ci-pipeline
    - get: pcf-ops-manager
      params: {globs: []}
      passed: [configure-director]
      trigger: true

  - task: apply-changes
    file: nsx-t-ci-pipeline/tasks/apply-changes/task.yml
    params:
      OPSMAN_DOMAIN_OR_IP_ADDRESS: ((opsman_domain_or_ip_address))
      OPSMAN_USERNAME: ((opsman_admin_username))
      OPSMAN_PASSWORD: ((opsman_admin_password))

- name: upload-pks
  plan:
  - aggregate:
    - get: nsx-t-ci-pipeline
    - get: pivnet-product
      resource: pivotal-container-service
      params: {globs: ["pivotal-container-service*.pivotal"]}
    - get: pcf-ops-manager
      params: {globs: []}
      passed: [deploy-director]
      trigger: true

  - task: upload-tile
    file: nsx-t-ci-pipeline/tasks/upload-product-and-stemcell/task.yml
    params:
      IAAS: "vsphere"
      OPSMAN_DOMAIN_OR_IP_ADDRESS: ((opsman_domain_or_ip_address))
      OPSMAN_USERNAME: ((opsman_admin_username))
      OPSMAN_PASSWORD: ((opsman_admin_password))
      PIVNET_API_TOKEN: ((pivnet_token))
      OM_IP: ((om_ip))

- name: deploy-pks
  plan:
  - aggregate:
    - get: nsx-t-ci-pipeline
    - get: pcf-ops-manager
      params: {globs: []}
      passed: [upload-pks]
      trigger: true

  - task: configure-pks
    file: nsx-t-ci-pipeline/tasks/config-pks/task.yml
    params: *pks-config-params

  - task: deploy-pks
    file: nsx-t-ci-pipeline/tasks/apply-changes/task.yml
    params:
      OPSMAN_DOMAIN_OR_IP_ADDRESS: ((opsman_domain_or_ip_address))
      OPSMAN_USERNAME: ((opsman_admin_username))
      OPSMAN_PASSWORD: ((opsman_admin_password))

  - task: config-pks-cli-user
    file: nsx-t-ci-pipeline/tasks/config-pks-cli-user/task.yml
    params:
      OPSMAN_DOMAIN_OR_IP_ADDRESS: ((opsman_domain_or_ip_address))
      OPSMAN_USERNAME: ((opsman_admin_username))
      OPSMAN_PASSWORD: ((opsman_admin_password))
      #OPSMAN_CLIENT_ID: ((opsman_client_id))
      #OPSMAN_CLIENT_SECRET: ((opsman_client_secret))
      PKS_UAA_DOMAIN_PREFIX: ((pks_tile_uaa_domain_prefix))
      PKS_SYSTEM_DOMAIN: ((pks_tile_system_domain))
      PKS_CLI_USERNAME: ((pks_tile_cli_username))
      PKS_CLI_USEREMAIL: ((pks_tile_cli_useremail))
      PKS_CLI_PASSWORD: ((pks_tile_cli_password))

- name: upload-pks-standalone
  plan:
  - aggregate:
    - get: nsx-t-ci-pipeline
    - get: pivnet-product
      resource: pivotal-container-service
      params: {globs: ["pivotal-container-service*.pivotal"]}

  - task: upload-tile
    file: nsx-t-ci-pipeline/tasks/upload-product-and-stemcell/task.yml
    params:
      IAAS: "vsphere"
      OPSMAN_DOMAIN_OR_IP_ADDRESS: ((opsman_domain_or_ip_address))
      OPSMAN_USERNAME: ((opsman_admin_username))
      OPSMAN_PASSWORD: ((opsman_admin_password))
      PIVNET_API_TOKEN: ((pivnet_token))
      OM_IP: ((om_ip))

- name: deploy-pks-standalone
  plan:
  - aggregate:
    - get: nsx-t-ci-pipeline
      params: {globs: []}
      passed: [upload-pks-standalone]
      trigger: true

  - task: configure-pks
    file: nsx-t-ci-pipeline/tasks/config-pks/task.yml
    params: *pks-config-params

  - task: deploy-pks
    file: nsx-t-ci-pipeline/tasks/apply-changes/task.yml
    params:
      OPSMAN_DOMAIN_OR_IP_ADDRESS: ((opsman_domain_or_ip_address))
      OPSMAN_USERNAME: ((opsman_admin_username))
      OPSMAN_PASSWORD: ((opsman_admin_password))

  - task: config-pks-cli-user
    file: nsx-t-ci-pipeline/tasks/config-pks-cli-user/task.yml
    params:
      OPSMAN_DOMAIN_OR_IP_ADDRESS: ((opsman_domain_or_ip_address))
      OPSMAN_USERNAME: ((opsman_admin_username))
      OPSMAN_PASSWORD: ((opsman_admin_password))
      #OPSMAN_CLIENT_ID: ((opsman_client_id))
      #OPSMAN_CLIENT_SECRET: ((opsman_client_secret))
      PKS_UAA_DOMAIN_PREFIX: ((pks_tile_uaa_domain_prefix))
      PKS_SYSTEM_DOMAIN: ((pks_tile_system_domain))
      PKS_CLI_USERNAME: ((pks_tile_cli_username))
      PKS_CLI_USEREMAIL: ((pks_tile_cli_useremail))
      PKS_CLI_PASSWORD: ((pks_tile_cli_password))

- name: delete-clusters
  plan:
  - get: pcf-pipelines-utils
  - task: delete-all-pks-clusters
    file: pcf-pipelines-utils/tasks/pcf/pks/delete-all-pks-clusters/task.yml
    params:
      PCF_PKS_API: ((pks_tile_uaa_domain_prefix)).((pks_tile_system_domain))
      PKS_CLI_USERNAME: ((pks_tile_cli_username))
      PKS_CLI_PASSWORD: ((pks_tile_cli_password))
      DEBUG: false

- name: wipe-env
  plan:
  - aggregate:
    - get: nsx-t-ci-pipeline
  - task: wipe
    file: nsx-t-ci-pipeline/tasks/wipe-env/task.yml
    params:
      OPSMAN_DOMAIN_OR_IP_ADDRESS: ((opsman_domain_or_ip_address))
      OPSMAN_USERNAME: ((opsman_admin_username))
      OPSMAN_PASSWORD: ((opsman_admin_password))
      OPSMAN_IP: ((om_ip))
      GOVC_INSECURE: ((vcenter_insecure))
      GOVC_CA_CERT: ((vcenter_ca_cert))
      GOVC_URL: ((vcenter_host))
      GOVC_USERNAME: ((vcenter_usr))
      GOVC_PASSWORD: ((vcenter_pwd))
      GOVC_DATACENTER: ((vcenter_data_center))
      GOVC_DATASTORE: ((om_data_store))
      GOVC_NETWORK: ((om_vm_network))
      GOVC_RESOURCE_POOL: ((om_resource_pool))
      GOVC_HOST: ((om_vm_host))
